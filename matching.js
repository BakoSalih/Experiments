function Reduction(t){const e=t.length,o=e/2;let n=new Float64Array(e*e),l=new Int16Array(e*e);for(let o=0;o<e;o++)for(let r=0;r<e;r++)0==t[o][r]?(l[o*e+r]=1,n[o*e+r]=1):(l[o*e+r]=0,n[o*e+r]=t[o][r]);const r=Math.ceil(t.length/2),c=new Float32Array(r*(r+1)*(2*r+1)/6);let f=-1;for(let t=0;t<=o-1;t++)for(let o=e-t-2;o>=t;o-=2)for(let r=e-t-2;r>=t;r-=2){f++;const t=r*e+o,s=n[t],a=n[t+e],h=n[t+1],i=n[t+e+1],u=l[t],g=l[t+e],p=l[t+1],w=l[t+e+1];let y=u+w;const A=g+p;let M;A>y?(M=s*i,c[f]=1):y==A?(M=s*i+a*h,c[f]=s*i/M):(y=A,M=a*h),l[t]=w-y,l[t+e]=p-y,l[t+1]=g-y,l[t+e+1]=u-y,n[t]=i/M,n[t+e]=h/M,n[t+1]=a/M,n[t+e+1]=s/M}return c}function gap(t,e,o,n,l,r=0,c=0,f=1){const s=t.length;if(l>0){const a=o+n-1+2*r,h=s-(e+n)-2*c-r;if(1==f)for(let e=-l;e<=l;e++)for(let o=-2*l;o<=2*l;o++)o>=-l+e&&o<=l+e&&(t[h-e][a+o]=0,t.holes[h-e][a+o]=1);else if(2==f)for(let e=-l;e<=l;e++)for(let o=-l;o<=l;o++)t[h-e][a+o]=0,t.holes[h-e][a+o]=1;else if(3==f)for(let e=-l;e<=l;e++)for(let o=-2*l;o<=2*l;o++)o>=-l+e&&o<=l+e&&(t[h-o][a+e]=0,t.holes[h-o][a+e]=1)}return t}function Matching(t,e){const o=new Uint8Array((e+2)*(e+2)),n=e/2;let l=0,r=e+2;for(let e=0;e<=n;e++){const c=[];let f=n-e+1,s=n+e-1;for(let t=f;t<=s;t+=2)for(let e=f;e<=s;e+=2){l++;const n=e*r+t;switch(o[n]+o[n+1]+o[n+r]+o[n+r+1]){case 1:let t=o[n];o[n]=o[n+r+1],o[n+r+1]=t,t=o[n+r],o[n+r]=o[n+1],o[n+1]=t;break;case 2:o[n]=0,o[n+1]=0,o[n+r]=0,o[n+r+1]=0,c.push([n,l]);break;case 0:c.push([n,l])}}for(let e=0,n=c.length;e<n;e++){const n=c[e][0];o[n-1]||o[n-r]||o[n+2*r]||o[n+r-1]||(Math.random()<t[t.length-c[e][1]]?(o[n]=1,o[n+r+1]=1):(o[n+1]=1,o[n+r]=1))}}const c=[];for(let t=e;t>=1;t--){const n=new Uint8Array(e);for(let l=1;l<=e;l++)n[l-1]=o[t*r+l];c.push(n)}return c}export{Reduction,Matching,gap};